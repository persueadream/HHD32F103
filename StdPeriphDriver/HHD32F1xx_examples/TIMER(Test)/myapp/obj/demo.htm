<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\myapp\obj\demo.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\myapp\obj\demo.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5040049: Last Updated: Tue Aug 15 10:58:58 2017
<BR><P>
<H3>Maximum Stack Usage =          8 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
TIM4_IRQHandler
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[63]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[4]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">NMI_Handler</a><BR>
 <LI><a href="#[5]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">HardFault_Handler</a><BR>
 <LI><a href="#[6]">MemoryManagement_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">MemoryManagement_Handler</a><BR>
 <LI><a href="#[7]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">BusFault_Handler</a><BR>
 <LI><a href="#[8]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">UsageFault_Handler</a><BR>
 <LI><a href="#[9]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[9]">SVC_Handler</a><BR>
 <LI><a href="#[a]">DebugMonitor_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[a]">DebugMonitor_Handler</a><BR>
 <LI><a href="#[b]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[b]">PendSV_Handler</a><BR>
 <LI><a href="#[c]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[c]">SysTick_Handler</a><BR>
 <LI><a href="#[1d]">ADC1_2_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1d]">ADC1_2_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[1d]">ADC1_2_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[35]">ADC3_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[e]">BOD_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[7]">BusFault_Handler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[1f]">CAN_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[f]">DAC_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[16]">DMA1_CHANNEL1_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[17]">DMA1_CHANNEL2_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[18]">DMA1_CHANNEL3_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[19]">DMA1_CHANNEL4_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[1a]">DMA1_CHANNEL5_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[1b]">DMA1_CHANNEL6_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[1c]">DMA1_CHANNEL7_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[3c]">DMA2_CHANNEL1_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[3d]">DMA2_CHANNEL2_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[3e]">DMA2_CHANNEL3_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[3f]">DMA2_CHANNEL4_5_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[a]">DebugMonitor_Handler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[11]">EXTI0_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[2f]">EXTI15_10_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[12]">EXTI1_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[13]">EXTI2_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[14]">EXTI3_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[15]">EXTI4_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[20]">EXTI9_5_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[5]">HardFault_Handler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[28]">I2C1_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[29]">I2C2_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[6]">MemoryManagement_Handler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[4]">NMI_Handler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[b]">PendSV_Handler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[10]">RTC_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[3]">Reset_Handler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[2a]">SPI1_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[2b]">SPI2_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[37]">SPI3_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[9]">SVC_Handler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[c]">SysTick_Handler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[22]">TIM10_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[23]">TIM11_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[32]">TIM13_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[33]">TIM14_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[21]">TIM1FAULT_TIM9_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[24]">TIM1_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[25]">TIM2_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[26]">TIM3_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[27]">TIM4_IRQHandler</a> from main.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[36]">TIM5_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[3a]">TIM6_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[3b]">TIM7_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[31]">TIM8FAULT_TIM12_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[34]">TIM8_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[2c]">UART1_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[2d]">UART2_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[2e]">UART3_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[38]">UART4_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[39]">UART5_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[30]">USBWAKEUP_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[1e]">USB_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[8]">UsageFault_Handler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[d]">WWDT_IRQHandler</a> from startup_hhd32f1xx_s.o(.text) referenced from startup_hhd32f1xx_s.o(RESET)
 <LI><a href="#[41]">__main</a> from __main.o(!!!main) referenced from startup_hhd32f1xx_s.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[41]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[42]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[44]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[65]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[66]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[45]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[67]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[49]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[68]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[69]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002A))

<P><STRONG><a name="[6a]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[6b]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[6c]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[6d]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[6e]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[6f]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[70]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[71]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000008))

<P><STRONG><a name="[72]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000F))

<P><STRONG><a name="[73]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[74]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[75]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[76]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[77]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[78]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000031))

<P><STRONG><a name="[79]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[7a]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[7b]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[4e]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[7c]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000006))

<P><STRONG><a name="[7d]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000E))

<P><STRONG><a name="[7e]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[7f]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000009))

<P><STRONG><a name="[80]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000003))

<P><STRONG><a name="[81]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000B))

<P><STRONG><a name="[43]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[82]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[46]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[48]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[83]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[4a]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; SYS_SystemInitial
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[84]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[64]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[4d]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[85]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[4f]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[58]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 378 bytes, Stack size 0 bytes, system_hhd32f1xx.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_SetAHBClkDivider
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_SelectMainClkSrc
</UL>

<P><STRONG><a name="[56]"></a>SystemInit</STRONG> (Thumb, 244 bytes, Stack size 0 bytes, system_hhd32f1xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_SystemInitial
</UL>

<P><STRONG><a name="[3]"></a>Reset_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>MemoryManagement_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryManagement_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemoryManagement_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>DebugMonitor_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMonitor_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMonitor_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>ADC1_2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[1d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_2_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>ADC3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>CAN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>DMA1_CHANNEL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>DMA1_CHANNEL2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>DMA1_CHANNEL3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>DMA1_CHANNEL4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>DMA1_CHANNEL5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>DMA1_CHANNEL6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>DMA1_CHANNEL7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>DMA2_CHANNEL1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>DMA2_CHANNEL2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>DMA2_CHANNEL3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>DMA2_CHANNEL4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>TIM1FAULT_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>TIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>TIM6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>TIM8FAULT_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>TIM8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>UART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>USBWAKEUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_hhd32f1xx_s.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_hhd32f1xx_s.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[86]"></a>GPIO_ConfigPinsAsInput</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hhd_gpio.o(.text), UNUSED)

<P><STRONG><a name="[5d]"></a>GPIO_ConfigPinsAsOutput</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hhd_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[87]"></a>GPIO_SetPin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hhd_gpio.o(.text), UNUSED)

<P><STRONG><a name="[88]"></a>GPIO_ResetPin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hhd_gpio.o(.text), UNUSED)

<P><STRONG><a name="[60]"></a>GPIO_InvertOutPin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hhd_gpio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[89]"></a>GPIO_GetPinState</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hhd_gpio.o(.text), UNUSED)

<P><STRONG><a name="[8a]"></a>GPIO_GetPortState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hhd_gpio.o(.text), UNUSED)

<P><STRONG><a name="[8b]"></a>GPIO_SetPortMask</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hhd_gpio.o(.text), UNUSED)

<P><STRONG><a name="[8c]"></a>GPIO_ResetPortMask</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hhd_gpio.o(.text), UNUSED)

<P><STRONG><a name="[8d]"></a>GPIO_ReadPort</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hhd_gpio.o(.text), UNUSED)

<P><STRONG><a name="[8e]"></a>GPIO_WritePort</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hhd_gpio.o(.text), UNUSED)

<P><STRONG><a name="[51]"></a>GPIO_EnableInt</STRONG> (Thumb, 462 bytes, Stack size 16 bytes, hhd_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>

<P><STRONG><a name="[8f]"></a>GPIO_ClrIntflag</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hhd_gpio.o(.text), UNUSED)

<P><STRONG><a name="[53]"></a>GPIO_DisableInt</STRONG> (Thumb, 244 bytes, Stack size 16 bytes, hhd_gpio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
</UL>

<P><STRONG><a name="[5a]"></a>TIM_Init</STRONG> (Thumb, 728 bytes, Stack size 0 bytes, hhd_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5c]"></a>TIM_ConfigMatch</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hhd_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[90]"></a>TIM_SetTimerCounter</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hhd_timer.o(.text), UNUSED)

<P><STRONG><a name="[91]"></a>TIM_ResetTimerCounter</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hhd_timer.o(.text), UNUSED)

<P><STRONG><a name="[92]"></a>TIM_GetTimerCounter</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hhd_timer.o(.text), UNUSED)

<P><STRONG><a name="[61]"></a>TIM_ClearIntFlag</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hhd_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM4_IRQHandler
</UL>

<P><STRONG><a name="[5e]"></a>TIM_EnableInt</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hhd_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[93]"></a>TIM_DisableInt</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hhd_timer.o(.text), UNUSED)

<P><STRONG><a name="[94]"></a>TIM_SetCTType</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hhd_timer.o(.text), UNUSED)

<P><STRONG><a name="[95]"></a>TIM_SelectTimerClearSignal</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, hhd_timer.o(.text), UNUSED)

<P><STRONG><a name="[96]"></a>TIM_SelectPriSrc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hhd_timer.o(.text), UNUSED)

<P><STRONG><a name="[97]"></a>TIM_SelectSecSrc</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hhd_timer.o(.text), UNUSED)

<P><STRONG><a name="[98]"></a>TIM_ConfigMatch0</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, hhd_timer.o(.text), UNUSED)

<P><STRONG><a name="[99]"></a>TIM_ConfigMatch1</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, hhd_timer.o(.text), UNUSED)

<P><STRONG><a name="[9a]"></a>TIM_ConfigMatch2</STRONG> (Thumb, 90 bytes, Stack size 8 bytes, hhd_timer.o(.text), UNUSED)

<P><STRONG><a name="[9b]"></a>TIM_ConfigMatch3</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, hhd_timer.o(.text), UNUSED)

<P><STRONG><a name="[9c]"></a>TIM_ConfigCapture0</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, hhd_timer.o(.text), UNUSED)

<P><STRONG><a name="[9d]"></a>TIM_ConfigCapture1</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, hhd_timer.o(.text), UNUSED)

<P><STRONG><a name="[9e]"></a>TIM_ConfigCapture2</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, hhd_timer.o(.text), UNUSED)

<P><STRONG><a name="[9f]"></a>TIM_ConfigCapture3</STRONG> (Thumb, 114 bytes, Stack size 0 bytes, hhd_timer.o(.text), UNUSED)

<P><STRONG><a name="[a0]"></a>TIM_GetCapture0Value</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hhd_timer.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>TIM_GetCapture1Value</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hhd_timer.o(.text), UNUSED)

<P><STRONG><a name="[a2]"></a>TIM_GetCapture2Value</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hhd_timer.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>TIM_GetCapture3Value</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hhd_timer.o(.text), UNUSED)

<P><STRONG><a name="[5f]"></a>TIM_START</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hhd_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[a4]"></a>TIM_STOP</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hhd_timer.o(.text), UNUSED)

<P><STRONG><a name="[5b]"></a>TIM_RESET</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hhd_timer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[55]"></a>SYS_SystemInitial</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, hhd_sys.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SYS_SystemInitial
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[57]"></a>SYS_SelectMainClkSrc</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, hhd_sys.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[59]"></a>SYS_SetAHBClkDivider</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, hhd_sys.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[a5]"></a>SYS_SelectWDTClkSrc</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, hhd_sys.o(.text), UNUSED)

<P><STRONG><a name="[a6]"></a>SYS_SelectClkOutSrc</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, hhd_sys.o(.text), UNUSED)

<P><STRONG><a name="[a7]"></a>SYS_SetClkOutDivider</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hhd_sys.o(.text), UNUSED)

<P><STRONG><a name="[a8]"></a>SYS_EnableClkOut</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, hhd_sys.o(.text), UNUSED)

<P><STRONG><a name="[a9]"></a>SYS_DisableClkOut</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, hhd_sys.o(.text), UNUSED)

<P><STRONG><a name="[aa]"></a>SYS_SetIOFilter</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hhd_sys.o(.text), UNUSED)

<P><STRONG><a name="[ab]"></a>SYS_PowerDownAngIP</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hhd_sys.o(.text), UNUSED)

<P><STRONG><a name="[ac]"></a>SYS_PowerUpAngIP</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hhd_sys.o(.text), UNUSED)

<P><STRONG><a name="[ad]"></a>SYS_EnablePhrClk</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, hhd_sys.o(.text), UNUSED)

<P><STRONG><a name="[ae]"></a>SYS_DisablePhrClk</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hhd_sys.o(.text), UNUSED)

<P><STRONG><a name="[af]"></a>SYS_ResetPhr</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, hhd_sys.o(.text), UNUSED)

<P><STRONG><a name="[b0]"></a>SYS_ResetSystem</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, hhd_sys.o(.text), UNUSED)

<P><STRONG><a name="[b1]"></a>SYS_BODResetSystem</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, hhd_sys.o(.text), UNUSED)

<P><STRONG><a name="[b2]"></a>SYS_GetResetStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hhd_sys.o(.text), UNUSED)

<P><STRONG><a name="[b3]"></a>SYS_ClearResetStatus</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hhd_sys.o(.text), UNUSED)

<P><STRONG><a name="[b4]"></a>SYS_EnterSleep</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, hhd_sys.o(.text), UNUSED)

<P><STRONG><a name="[b5]"></a>SYS_SetDeepSleepWakeupPin</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, hhd_sys.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>SYS_ResetDeepSleepWakeupPin</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hhd_sys.o(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>SYS_EnterDeepSleep</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, hhd_sys.o(.text), UNUSED)

<P><STRONG><a name="[b8]"></a>SYS_EnterPowerDown</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, hhd_sys.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>SYS_IOConfig</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hhd_sys.o(.text), UNUSED)

<P><STRONG><a name="[ba]"></a>SYS_IOSetPullup</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hhd_sys.o(.text), UNUSED)

<P><STRONG><a name="[bb]"></a>SYS_IOSetPulldown</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hhd_sys.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>SYS_IOEnableFilter</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hhd_sys.o(.text), UNUSED)

<P><STRONG><a name="[bd]"></a>SYS_IODisableFilter</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, hhd_sys.o(.text), UNUSED)

<P><STRONG><a name="[4b]"></a>main</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = main &rArr; SYS_SystemInitial
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SYS_SystemInitial
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_RESET
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_START
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_EnableInt
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ConfigMatch
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigPinsAsOutput
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[27]"></a>TIM4_IRQHandler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TIM4_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_ClearIntFlag
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_InvertOutPin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_hhd32f1xx_s.o(RESET)
</UL>
<P><STRONG><a name="[be]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[bf]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[c0]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[47]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[4c]"></a>exit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[c1]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[62]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[c2]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[c3]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[c4]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[c5]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[52]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, hhd_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_EnableInt
</UL>

<P><STRONG><a name="[54]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, hhd_gpio.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_DisableInt
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
